(deffunction system-string (?arg)
   (bind ?arg (str-cat ?arg " > temp.txt"))
   (system ?arg)
   (open "temp.txt" temp "r")
   (bind ?rv (readline temp))
   (close temp)
   ?rv)

(defrule Start
	(not (Step))
	=>
	(assert (system-string "time /t"))
	(load "FactsTemplates.clp")
	(load "InitialFacts.clp")
	(load "AverageGrades.clp")
	(load "OrderStudents.clp")
	(load "Scholarships.clp")
	(load "GuidingProfessors.clp")
	(load "ExamDatesChoice.clp")
	(load "GenerateStatistics.clp")
	(reset)
	(assert (Step))
	(assert (system-string "time /t"))
)

(defrule ReadOptions
	(declare (salience -10))
	
	?ad <- (Step)
	=>
	(printout t crlf)
	(printout t "Available Options:" crlf)
	(printout t "1 - Determine the Final Grades & the Average Final Grades" crlf)
	(printout t "2 - Order Students by Average Final Grades" crlf)
	(printout t "3 - Determine the Scholarships for each Student" crlf)
	(printout t "4 - Determine the Values of each Scholarship" crlf)
	(printout t "5 - Determine the Guiding Professor for each Student" crlf)
	(printout t "6 - Determine the Exam Dates for each Group" crlf)
	(printout t "------------------------------------------------------------" crlf)
	(printout t "7 - Print Average Final Grades for all Students" crlf)
	(printout t "8 - Print Students having Average Final Grades greater than a specified value" crlf)
	(printout t "9 - Print Students having at least one Discipline Failed" crlf)
	(printout t "10 - Print Average Final Grades for a specified Student" crlf)
	(printout t "11 - Print Final Grades from a specified Discipline" crlf)
	(printout t "12 - Print Final Grades greater than a specified value from a specified Discipline" crlf)
	(printout t "13 - Print Students Failed at a specified Discipline" crlf)
	(printout t "14 - Print all Final Grades of a specified Student" crlf)
	(printout t "15 - Print Final Grade from a specified Discipline of a specified Student" crlf)
	(printout t "16 - Print Scholarships for each Student" crlf)
	(printout t "17 - Print Students having a specified Scholarship" crlf)
	(printout t "18 - Print Scholarship of a specified Student" crlf)
	(printout t "19 - Print Guiding Professors for all Students" crlf)
	(printout t "20 - Print Students guided by a specified Professor" crlf)
	(printout t "21 - Print Guiding Professor of a specified Student" crlf)
	(printout t "22 - Print all Exam Dates" crlf)
	(printout t "23 - Print Exam Dates of a specified Group" crlf)
	(printout t "24 - Print Exam Dates of a specified Professor" crlf)
	(printout t "25 - Print Exam Dates of a specified Student" crlf)
	(printout t "26 - Print Information about a specified Student" crlf)
	(printout t "27 - Print Information about a specified Professor" crlf)	
	(printout t "------------------------------------------------------------" crlf)
	(printout t "x - Stop the Program" crlf)
	
	(printout t crlf)
	(printout t "Option: ")
	(bind ?optiune (readline))
	
	(if (eq ?optiune "1")
		then  
			(assert (Determine FinalGrades))
	)
	(if (eq ?optiune "2")
		then  
			(assert (ToDo CreateStudentsList))
			(assert (ToDo OrderStudents))
	)
	(if (eq ?optiune "3")
		then  
			(assert (Determine Scholarships))
	)
	(if (eq ?optiune "4")
		then  
			(assert (Determine ValuesScholarships))
	)
	(if (eq ?optiune "5")
		then  
			(assert (Determine GuidingProf))
	)
	(if (eq ?optiune "6")
		then  
			(assert (Determine ExamDates))
	)
	(if (eq ?optiune "7")
		then  
			(assert (Print AverageFinalGrades))
	)
	(if (eq ?optiune "8")
		then  
			(printout t "Value: ")
			(bind ?value (read))
			(assert (Print AverageFinalGrades greater ?value))
	)
	(if (eq ?optiune "9")
		then  
			(assert (Print AverageFinalGrades Fail))
	)
	(if (eq ?optiune "10")
		then  
			(printout t "Student ID: ")
			(bind ?value (read))
			(assert (Print AverageFinalGrades Student ?value))
	)
	(if (eq ?optiune "11")
		then  
			(printout t "Discipline: ")
			(bind ?value (read))
			(assert (Print FinalGrade Discipline ?value))
	)
	(if (eq ?optiune "12")
		then  
			(printout t "Value: ")
			(bind ?value (read))
			(printout t "Discipline: ")
			(bind ?value2 (read))
			(assert (Print FinalGrade Discipline ?value2 greater ?value))
	)
	(if (eq ?optiune "13")
		then  
			(printout t "Discipline: ")
			(bind ?value (read))
			(assert (Print FinalGrade Discipline ?value Fail))
	)
	(if (eq ?optiune "14")
		then  
			(printout t "Student ID: ")
			(bind ?value (read))
			(assert (Print FinalGrade Student ?value))
	)
	(if (eq ?optiune "15")
		then  
			(printout t "Student ID: ")
			(bind ?value (read))
			(printout t "Discipline: ")
			(bind ?value2 (read))
			(assert (Print FinalGrade Student ?value Discipline ?value2))
	)
	(if (eq ?optiune "16")
		then  
			(assert (Print Scholarship))
	)
	(if (eq ?optiune "17")
		then  
			(printout t "Scholarship Type (Meritorious, Integral, Partial, None): ")
			(bind ?value (read))
			(assert (Print Scholarship ?value))
	)
	(if (eq ?optiune "18")
		then  
			(printout t "Student ID: ")
			(bind ?value (read))
			(assert (Print Scholarship Student ?value))
	)
	(if (eq ?optiune "19")
		then  
			(assert (Print GuidingProf))
	)
	(if (eq ?optiune "20")
		then  
			(printout t "Professor ID: ")
			(bind ?value (read))
			(assert (Print GuidingProf Professor ?value))
	)
	(if (eq ?optiune "21")
		then  
			(printout t "Student ID: ")
			(bind ?value (read))
			(assert (Print GuidingProf Student ?value))
	)
	(if (eq ?optiune "22")
		then  
			(assert (Print ExamDates))
	)
	(if (eq ?optiune "23")
		then  
			(printout t "Group name: ")
			(bind ?value (read))
			(assert (Print ExamDates Group ?value))
	)
	(if (eq ?optiune "24")
		then  
			(printout t "Professor ID: ")
			(bind ?value (read))
			(assert (Print ExamDates Professor ?value))
	)
	(if (eq ?optiune "25")
		then  
			(printout t "Student ID: ")
			(bind ?value (read))
			(assert (Print ExamDates Student ?value))
	)
	(if (eq ?optiune "26")
		then  
			(printout t "Student ID: ")
			(bind ?value (read))
			(assert (Print Info Student ?value))
	)
	(if (eq ?optiune "27")
		then  
			(printout t "Professor ID: ")
			(bind ?value (read))
			(assert (Print Info Professor ?value))
	)
	
	(if (eq ?optiune "x")
		then  
			(halt)
	)
	
	(printout t crlf)
	(retract ?ad)
	(assert (Step))

)